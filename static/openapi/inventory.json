{
  "openapi": "3.0.0",
  "info": {
    "title": "StubHub Inventory API",
    "version": "2.249.0.0",
    "x-logo": {
      "url": "https://img.vggcdn.net/images/Assets/Icons/bfx/stubhub-logo-merch-purple-mweb.440b3765.svg",
      "backgroundColor": "#222222"
    }
  },
  "servers": [
    {
      "url": "https://api.stubhub.net/v2",
      "description": "Production"
    },
    {
      "url": "https://sandbox.api.stubhub.net/v2",
      "description": "Sandbox"
    }
  ],
  "paths": {
    "/sellerlistings/{listingId}": {
      "patch": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Update a seller listing",
        "operationId": "SellerListings_Patch",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchSellerListingRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Get a seller listing",
        "operationId": "SellerListings_Get",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Delete a seller listing",
        "operationId": "SellerListings_DeleteListing",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/recentupdates": {
      "get": {
        "tags": [
          "SellerListings"
        ],
        "summary": "List seller listings (recent updates)",
        "description": "List seller listings for the authenticated user that have been created or updated over a certain period of time.",
        "operationId": "SellerListings_GetSellerListingsRecentUpdates",
        "parameters": [
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filters the response to only return items that have been updated since the given timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListings"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings": {
      "get": {
        "tags": [
          "SellerListings"
        ],
        "summary": "List seller listings",
        "description": "List seller listings for the authenticated user.",
        "operationId": "SellerListings_GetSellerListings",
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "requested_event_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filters the response to only return items that have been updated since the given timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `available_tickets`, `created_at`, `event_date`, `event_name`, `expiration_date`, `price`, `resource_version`, or`ticket_availability_date`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListings"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Create a seller listing for a requested event",
        "description": "Creates a seller listing for an event requested by the current user.",
        "operationId": "SellerListings_CreateListingForRequestedEvent",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostRequestedEventSellerListingRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings",
              "write:requestedevents"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/sellerlistingpreview": {
      "post": {
        "tags": [
          "SellerListings (Preview)"
        ],
        "summary": "Preview a seller listing",
        "description": "Creates a preview of a seller listing. The listing will not have an `id` and will not actually be created on the StubHub marketplace.",
        "operationId": "SellerListings_CreateListingPreview",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostSellerListingPreviewRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/updatepreview": {
      "post": {
        "tags": [
          "SellerListings (Preview)"
        ],
        "summary": "Preview a seller listing update",
        "description": "Creates a preview of an update to a seller listing. The updates will not actually be applied to the listing on the StubHub marketplace.",
        "operationId": "SellerListings_UpdateListingPreview",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostSellerListingPreviewRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistingpreview": {
      "post": {
        "tags": [
          "SellerListings (Preview)"
        ],
        "summary": "Preview a seller listing for a requested event",
        "description": "Creates a preview of a seller listing for an event requested by the current user. The listing will not have an `id` and will not actually be created on the StubHub marketplace.",
        "operationId": "SellerListings_CreateListingPreviewForRequestedEvent",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostRequestedEventSellerListingPreviewRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings",
              "write:requestedevents"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/sellerlistings": {
      "post": {
        "tags": [
          "SellerListings"
        ],
        "summary": "Create a seller listing",
        "operationId": "SellerListings_CreateListing",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostSellerListingRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/externalsellerlistings/{externallistingId}": {
      "get": {
        "tags": [
          "SellerListings (External Id)"
        ],
        "summary": "Get a seller listing by external ID",
        "description": "Get a seller listing by identifier that has been assigned to the listing in an external inventory management system.",
        "operationId": "SellerListings_GetByExternalListingId",
        "parameters": [
          {
            "name": "externallistingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/externalsellerlistings/{externalId}": {
      "patch": {
        "tags": [
          "SellerListings (External Id)"
        ],
        "summary": "Update a seller listing by external ID",
        "description": "Update a seller listing by identifier that has been assigned to the listing in an external inventory management system.",
        "operationId": "SellerListings_PatchByExternalListingId",
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchSellerListingRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerListing"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SellerListings (External Id)"
        ],
        "summary": "Delete a seller listing by external ID",
        "description": "Delete a seller listing by identifier that has been assigned to the listing in an external inventory management system.",
        "operationId": "SellerListings_DeleteListingByExternalListingId",
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/listingconstraints": {
      "get": {
        "tags": [
          "ListingConstraints"
        ],
        "summary": "List listing constraints for an event",
        "operationId": "ListingConstraints_GetEventListingConstraints",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingConstraints"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        }
      }
    },
    "/sellerlistings/{listingId}/constraints": {
      "get": {
        "tags": [
          "ListingConstraints"
        ],
        "summary": "Get listing constraints for a seller listing",
        "operationId": "ListingConstraints_GetListingConstraints",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingConstraints"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/listingconstraints": {
      "put": {
        "tags": [
          "ListingConstraints"
        ],
        "summary": "Get listing constraints for a requested event",
        "description": "Get listings constraints for an event requested by the current user.",
        "operationId": "ListingConstraints_PutRequestedEventListingConstraints",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PutRequestedEventRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingConstraints"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings",
              "write:requestedevents"
            ]
          }
        ]
      }
    },
    "/sellerevents": {
      "get": {
        "tags": [
          "SellerEvents"
        ],
        "summary": "List seller events",
        "description": "List events with listings that belong to the authenticated user.",
        "operationId": "SellerEvents_GetSellerEvents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Filters the response to only return items that have been updated since the given timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Determines the ordering of items. A comma-separated string containing `id`, `number_of_tickets`, or`resource_version`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SellerEvents"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "SellerEvents"
        ],
        "summary": "Create a seller event",
        "description": "Request for an event to be created on the StubHub marketplace.",
        "operationId": "SellerEvents_PutSellerRequestedEvent",
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PutRequestedEventRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerEvent"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:requestedevents"
            ]
          }
        ]
      }
    },
    "/sellerevents/{eventIdOrRequestedEventId}": {
      "get": {
        "tags": [
          "SellerEvents"
        ],
        "summary": "Get a seller event",
        "description": "Get an event with listings belonging to the current user",
        "operationId": "SellerEvents_GetSellerEvent",
        "parameters": [
          {
            "name": "eventIdOrRequestedEventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerEvent"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/shipments/{shipmentId}/label": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get a shipping label for a seller listing",
        "operationId": "Shipments_GetListingShippingLabel",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/shipments": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "List shipments for a seller listing",
        "operationId": "Shipments_GetListingShipments",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipments"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user",
              "read:sellerlistings"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Shipments"
        ],
        "summary": "Print a shipping label for a seller listing",
        "operationId": "Shipments_PutOrGetListingShipmentLabel",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/shipments/{shipmentId}": {
      "patch": {
        "tags": [
          "Shipments"
        ],
        "summary": "Update a shipment for a seller listing",
        "operationId": "Shipments_PatchListingShipment",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatchShipmentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user",
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/eticketuploads": {
      "post": {
        "tags": [
          "E-Tickets"
        ],
        "summary": "Upload e-tickets for a seller listing",
        "operationId": "ETicket_UploadListingETicket",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUploads"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "E-Tickets"
        ],
        "summary": "List e-ticket uploads for a seller listing",
        "operationId": "ETicket_GetListingETicketUploads",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUploads"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/eticketuploads": {
      "post": {
        "tags": [
          "E-Tickets"
        ],
        "summary": "Upload e-tickets for an event",
        "operationId": "ETicket_UploadEventETicket",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUploads"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "E-Tickets"
        ],
        "summary": "List e-ticket uploads for an event",
        "operationId": "ETicket_GetEventETicketUploads",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETicketUpload"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:user"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/etickets": {
      "get": {
        "tags": [
          "E-Tickets"
        ],
        "summary": "List e-tickets for a seller listing",
        "operationId": "ETicket_GetListingETickets",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETickets"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "E-Tickets"
        ],
        "summary": "Mark-back e-tickets from a seller listing",
        "description": "Removes a certain number of e-tickets that you no longer wish to sell from your listing.",
        "operationId": "ETicket_MarkBackETickets",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Specifies which page of data to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Set custom page sizes on response.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PostMarkBackETicketsRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ETickets"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "400": {
            "$ref": "#/components/responses/validation_failed",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/etickets/{ETicketId}": {
      "delete": {
        "tags": [
          "E-Tickets"
        ],
        "summary": "Delete e-ticket from a seller listing",
        "operationId": "ETicket_DeleteListingETicket",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:sellerlistings"
            ]
          }
        ]
      }
    },
    "/events/{eventId}/etickets/{eticketId}": {
      "delete": {
        "tags": [
          "E-Tickets"
        ],
        "summary": "Delete e-ticket from an event",
        "operationId": "ETicket_DeleteEventETicket",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "eticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "write:user"
            ]
          }
        ]
      }
    },
    "/sellerlistings/{listingId}/markedbacketickets/{markedBackETicketId}/document": {
      "get": {
        "tags": [
          "E-Tickets"
        ],
        "summary": "Get marked back e-ticket file for seller listing",
        "operationId": "ETicketDocument_GetMarkedBackETicketDocument",
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "markedBackETicketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found",
            "description": null
          },
          "403": {
            "$ref": "#/components/responses/forbidden",
            "description": null
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication",
            "description": null
          },
          "500": {
            "$ref": "#/components/responses/internal_server_error",
            "description": null
          }
        },
        "security": [
          {
            "OAuth2": [
              "read:sellerlistings"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SellerListing": {
        "type": "object",
        "description": "A set of tickets for sale on the StubHub marketplace that belong to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The listing identifier.",
            "format": "int64",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The date when the listing was created.",
            "format": "date-time",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "display_seating": {
            "description": "The seating information that will be displayed to buyers for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "updated_at": {
            "type": "string",
            "description": "The date when the listing was last updated.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "expires_at": {
            "type": "string",
            "description": "The date when the listing will be automatically unpublished from the marketplace.",
            "format": "date-time",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation"
            }
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "undeliverable": {
            "type": "boolean",
            "description": "Shipment of the ticket to the buyer cannot be guaranteed before the event. To increase the deliverability of electronic type tickets, preupload them (e.g. pre-upload barcodes or PDF files.) To increase deliverability of paper tickets, opt your tickets into our LMS program.",
            "nullable": true
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerListingLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerListingEmbeddedResources"
              }
            ]
          }
        }
      },
      "Seating": {
        "type": "object",
        "description": "Represents the seating information for a ticket(s) in a Venue.",
        "additionalProperties": false,
        "required": [
          "section"
        ],
        "properties": {
          "section": {
            "type": "string",
            "description": "The section of the ticket(s).",
            "nullable": true
          },
          "row": {
            "type": "string",
            "description": "The row of the ticket(s).",
            "nullable": true
          },
          "seat_from": {
            "type": "string",
            "description": "The first in a contiguous block of seats to which the tickets have been allocated.",
            "nullable": true
          },
          "seat_to": {
            "type": "string",
            "description": "The last in a contiguous block of seats to which the tickets have been allocated.",
            "nullable": true
          }
        }
      },
      "Money": {
        "type": "object",
        "description": "Returned for monetary values, such as ticket prices, fees charged and tax amounts.",
        "additionalProperties": false,
        "required": [
          "amount",
          "currency_code"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "description": "The decimal amount of the money.",
            "format": "decimal",
            "nullable": true
          },
          "currency_code": {
            "type": "string",
            "description": "The ISO 4217 currency code that the monetary value is represented in.",
            "nullable": true
          },
          "display": {
            "type": "string",
            "description": "A user-friendly string representing the monetary value.",
            "nullable": true
          }
        }
      },
      "BarcodeInformation": {
        "type": "object",
        "description": "A set of barcodes for a seat.",
        "additionalProperties": false,
        "properties": {
          "seat_ordinal": {
            "type": "integer",
            "description": "An ordinal number for a seat.",
            "format": "int32",
            "nullable": true
          },
          "seat": {
            "type": "string",
            "description": "Seat number.",
            "nullable": true
          },
          "row": {
            "type": "string",
            "description": "Row of ticket.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status of the barcode. Can be `Received` or `FailedValidation`",
            "nullable": true
          },
          "barcode_values_sha256_hashed": {
            "type": "array",
            "description": "SHA256-hashed barcode(s) for this seat.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SellerListingLinks": {
        "title": "SellerListingLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "event:createsellerlisting": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:constraints": {
            "description": "The constraints applied to this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:contactuswebpage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:delete": {
            "description": "Delete a listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:etickets": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:eticketuploads": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:lmsoptin": {
            "description": "Opt this listing into Last Minute Sales.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:lmsoptout": {
            "description": "Opt this listing out of Last Minute Sales.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:lmspickup": {
            "description": "The pickup instructions for Last Minute Sales.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:optionalverificationrequests": {
            "description": "The VerificationRequests that can be resolved in order for the\nlisting to be published on some StubHub websites.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:pricing": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:publish": {
            "description": "Make seller listing available for purchase.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:saveetickets": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:shipments": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:ticketlocation": {
            "description": "The address where the ticket(s) are located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:unpublish": {
            "description": "Make the listing unavailable for purchase.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatedisplaynumberoftickets": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatefacevalue": {
            "description": "Update face value for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updateinhandat": {
            "description": "Update the date the seller will have tickets for this listing in hand.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatenotes": {
            "description": "Update notes for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatenumberoftickets": {
            "description": "Update number of tickets available for purchase.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatepreview": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updateseating": {
            "description": "Update the seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatesplittype": {
            "description": "Update the way the ticket(s) are allowed to be split up when sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updateticketlocation": {
            "description": "Update the address where the ticket(s) are located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updateticketprice": {
            "description": "Update the price of each ticket in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:updatetickettype": {
            "description": "Update the type of ticket(s) for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:uploadeticket": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:verificationrequests": {
            "description": "The VerificationRequests that must be resolved in order for the\nlisting to be published on all StubHub websites.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerlisting:webpage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "Link": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "href": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "templated": {
            "type": "boolean"
          }
        }
      },
      "SellerListingEmbeddedResources": {
        "title": "SellerListingEmbeddedResources",
        "type": "object",
        "properties": {
          "constraints": {
            "description": "The constraints applied to this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingConstraints"
              }
            ]
          },
          "event": {
            "description": "The event for this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEvent"
              }
            ]
          },
          "listing_notes": {
            "type": "array",
            "description": "The notes for this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "split_type": {
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SplitType"
              }
            ]
          },
          "ticket_type": {
            "description": "The type of ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TicketType"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event is taking place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          }
        }
      },
      "ListingConstraints": {
        "type": "object",
        "description": "The constraints applied to a listing for a particular event on the StubHub marketplace.",
        "additionalProperties": false,
        "properties": {
          "min_ticket_price": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "max_ticket_price": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "min_number_of_tickets": {
            "type": "integer",
            "description": "The minimum number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "max_number_of_tickets": {
            "type": "integer",
            "description": "The maximum number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_required": {
            "type": "boolean",
            "description": "True if a ticket location is required for tickets; Otherwise, false.",
            "nullable": true
          },
          "seats_required": {
            "type": "boolean",
            "description": "True if seat-level information (seat_to and seat_from) is required; Otherwise, false.",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "description": "The valid section and row information. If no sections are specified then any text will be accepted for section and row.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          },
          "primary_order_id_required": {
            "type": "boolean",
            "nullable": true
          },
          "home_or_away_required": {
            "type": "boolean",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingConstraintsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingConstraintsEmbeddedResources"
              }
            ]
          }
        }
      },
      "Section": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "free_text_row": {
            "type": "boolean"
          },
          "queue_number_row": {
            "type": "boolean"
          },
          "rows": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Row"
            }
          }
        }
      },
      "Row": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ListingConstraintsLinks": {
        "title": "ListingConstraintsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ListingConstraintsEmbeddedResources": {
        "title": "ListingConstraintsEmbeddedResources",
        "type": "object",
        "properties": {
          "connected_seller_listing_notes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "currencies": {
            "type": "array",
            "description": "The valid currencies for the listing ticket price.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "listing_notes": {
            "type": "array",
            "description": "The available notes for this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "required_unique_listing_notes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "restricted_on_use_listing_notes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ListingNote"
            }
          },
          "split_types": {
            "type": "array",
            "description": "The way that tickets are allowed to be split up when sold.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SplitType"
            }
          },
          "ticket_types": {
            "type": "array",
            "description": "The valid types of tickets.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TicketType"
            }
          }
        }
      },
      "ListingNote": {
        "type": "object",
        "description": "Provides additional notes on a listing",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The listing note identifier.",
            "format": "int32",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "The localized note.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The listing note type name. Can be `Information`, `Perk`, `Defect` and `RestrictionOnUse`.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ListingNoteLinks"
              }
            ]
          }
        }
      },
      "ListingNoteLinks": {
        "title": "ListingNoteLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "Currency": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "description": "The ISO 4217 currency code that identifies the currency.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the currency.",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "description": "The symbol that identifies the currency.",
            "nullable": true
          },
          "decimal_places": {
            "type": "integer",
            "description": "The number of decimal places used to represent amounts in the currency.",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyLinks"
              }
            ]
          }
        }
      },
      "CurrencyLinks": {
        "title": "CurrencyLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SplitType": {
        "type": "object",
        "description": "The way that the ticket(s) in a listing are allowed to be split up when sold.",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of split. Can be Any, None, AvoidOne, AvoidOneAndThree, or Pairs.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The localised name of the type of split.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The localised description of the split.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SplitTypeLinks"
              }
            ]
          }
        }
      },
      "SplitTypeLinks": {
        "title": "SplitTypeLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "TicketType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TicketTypeLinks"
              }
            ]
          }
        }
      },
      "TicketTypeLinks": {
        "title": "TicketTypeLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "EmbeddedEvent": {
        "type": "object",
        "description": "An event on the StubHub platform.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The event identifier.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the event.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "The date when the event starts.",
            "format": "date-time",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "description": "The date when the event ends.",
            "format": "date-time",
            "nullable": true
          },
          "on_sale_date": {
            "type": "string",
            "description": "The date when tickets for the event will go onsale.",
            "format": "date-time",
            "nullable": true
          },
          "date_confirmed": {
            "type": "boolean",
            "description": "True if the event start and end date have been confirmed; Otherwise, false.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedEventLinks"
              }
            ]
          }
        }
      },
      "EmbeddedEventLinks": {
        "title": "EmbeddedEventLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "EmbeddedVenue": {
        "type": "object",
        "description": "A venue is a location where an event takes place.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The venue identifier.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the venue.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The name of the city where the venue is located.",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "The name of the State or Province where the venue is located.",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "description": "The latitude for the venue.",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "The longitude for the venue.",
            "format": "double",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenueLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenueEmbeddedResources"
              }
            ]
          }
        }
      },
      "EmbeddedVenueLinks": {
        "title": "EmbeddedVenueLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "EmbeddedVenueEmbeddedResources": {
        "title": "EmbeddedVenueEmbeddedResources",
        "type": "object",
        "properties": {
          "country": {
            "description": "The Country where the venue is located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "Country": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "description": "The two-letter ISO 3166 code for the country.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the country.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryLinks"
              }
            ]
          }
        }
      },
      "CountryLinks": {
        "title": "CountryLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "country:events": {
            "description": "The events taking place in a country.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "country:localwebpage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PatchSellerListingRequest": {
        "type": "object",
        "description": "A set of tickets for sale on the StubHub marketplace that belong to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation2"
            }
          }
        }
      },
      "Reservation": {
        "type": "object",
        "description": "Reservation details of a sale or a listing.",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "store": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReservationStore"
              }
            ]
          },
          "expiry_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "release_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pin": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReservationStore": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "regex": {
            "type": "string",
            "nullable": true
          },
          "pin_required": {
            "type": "boolean"
          },
          "code_required": {
            "type": "boolean"
          }
        }
      },
      "SellerListingAdditionalInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "primary_order_id": {
            "type": "string",
            "nullable": true
          },
          "home_or_away": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HomeOrAway"
              }
            ]
          },
          "is_seated": {
            "type": "boolean",
            "nullable": true
          },
          "missing_seating_reason_type_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ab_tests": {
            "type": "string",
            "nullable": true
          },
          "pcid": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HomeOrAway": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Home",
          "Away"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "SellerListingExternalEventInformation": {
        "type": "object",
        "description": "Information about the listing's event on other platforms.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "An identifier for the event on an external platform.",
            "format": "int32"
          },
          "platform": {
            "type": "string",
            "description": "The name of the external platform.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The URL of the event on the external platform.",
            "nullable": true
          },
          "venue_id": {
            "type": "integer",
            "description": "An identifier for the event's venue on an external platform.",
            "format": "int32",
            "nullable": true
          },
          "performer_id": {
            "type": "integer",
            "description": "An identifier for the event's category on an external platform.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "BarcodeInformation2": {
        "type": "object",
        "description": "A set of barcodes for a seat.",
        "additionalProperties": false,
        "properties": {
          "seat_ordinal": {
            "type": "integer",
            "description": "An ordinal number for a seat.",
            "format": "int32",
            "nullable": true
          },
          "seat": {
            "type": "string",
            "description": "Seat number.",
            "nullable": true
          },
          "row": {
            "type": "string",
            "description": "Row of ticket.",
            "nullable": true
          },
          "barcode_values": {
            "type": "array",
            "description": "Barcode(s) values for this seat.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "SellerListings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerListingsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerListingsEmbeddedResources"
              }
            ]
          }
        }
      },
      "SellerListingsLinks": {
        "title": "SellerListingsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SellerListingsEmbeddedResources": {
        "title": "SellerListingsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListing"
            }
          }
        }
      },
      "PostSellerListingPreviewRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "seating",
          "ticket_type",
          "split_type",
          "number_of_tickets"
        ],
        "properties": {
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation2"
            }
          }
        }
      },
      "PostRequestedEventSellerListingPreviewRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "seating",
          "ticket_type",
          "split_type",
          "number_of_tickets"
        ],
        "properties": {
          "event": {
            "description": "The event information.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventRequest"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VenueRequest"
              }
            ]
          },
          "country": {
            "description": "The country where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryRequest"
              }
            ]
          },
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation2"
            }
          }
        }
      },
      "EventRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "start_date"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the event.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "The date when the event starts.",
            "format": "date-time",
            "nullable": true
          },
          "date_confirmed": {
            "type": "boolean",
            "description": "True if the event start and end date have been confirmed; Otherwise, false.",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Additional notes on the event.",
            "nullable": true
          }
        }
      },
      "VenueRequest": {
        "type": "object",
        "description": "A venue is a location where an event takes place.",
        "additionalProperties": false,
        "required": [
          "name",
          "city"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the venue.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The name of the city where the venue is located.",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "The name of the State or Province where the venue is located.",
            "nullable": true
          }
        }
      },
      "CountryRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "The two-letter ISO 3166 code for the country.",
            "nullable": true
          }
        }
      },
      "PostRequestedEventSellerListingRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "seating",
          "ticket_type",
          "split_type",
          "number_of_tickets"
        ],
        "properties": {
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation2"
            }
          },
          "event": {
            "description": "The event information.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventRequest"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VenueRequest"
              }
            ]
          },
          "country": {
            "description": "The country where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryRequest"
              }
            ]
          }
        }
      },
      "PostSellerListingRequest": {
        "type": "object",
        "description": "A set of tickets for sale on the StubHub marketplace that belong to the currently authenticated user.",
        "additionalProperties": false,
        "required": [
          "seating",
          "ticket_type",
          "split_type",
          "number_of_tickets"
        ],
        "properties": {
          "ticket_price": {
            "description": "The price of each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_proceeds": {
            "description": "The amount that the seller will receive for each ticket sold.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "seating": {
            "description": "The seating information for the ticket(s) in this listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Seating"
              }
            ]
          },
          "face_value": {
            "description": "The price printed on the ticket, not including any booking fees.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "ticket_type": {
            "type": "string",
            "description": "The type of ticket(s) in this listing.",
            "nullable": true
          },
          "split_type": {
            "type": "string",
            "description": "The way that the ticket(s) are allowed to be split up when sold.",
            "nullable": true
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "display_number_of_tickets": {
            "type": "integer",
            "description": "The number of tickets that should be displayed to buyers as available for purchase.",
            "format": "int32",
            "nullable": true
          },
          "ticket_location_address_id": {
            "type": "integer",
            "description": "The identifier of the address where the ticket(s) are located.",
            "format": "int32",
            "nullable": true
          },
          "listing_note_ids": {
            "type": "array",
            "description": "An array of listing note identifiers that provides additional notes on the listing",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "in_hand_at": {
            "type": "string",
            "description": "The date when the seller will have the tickets in hand.",
            "format": "date-time",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "An identifier that has been assigned to the listing in an external inventory management system.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "A comma-separated string of additional notes about the listing",
            "nullable": true
          },
          "instant_delivery": {
            "type": "boolean",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "True when the listing should be published; Otherwise, false.",
            "nullable": true
          },
          "lms_optin": {
            "type": "boolean",
            "description": "True when the listing should be opted into Last Minute Sales; Otherwise, false.",
            "nullable": true
          },
          "eticket_ids": {
            "type": "array",
            "description": "A array of the identifiers of the E-Tickets to be assigned to the listing.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "external_event_information": {
            "type": "array",
            "description": "Information about the listing's event on other platforms.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerListingExternalEventInformation"
            }
          },
          "purchase_price_per_ticket": {
            "description": "The purchase price paid by the seller for each ticket in the listing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "total_purchase_price": {
            "description": "The total purchase price paid by the seller.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "sales_tax_paid": {
            "type": "boolean",
            "description": "True if the seller already paid sales tax for the ticket(s); otherwise, false.",
            "nullable": true
          },
          "barcodes": {
            "type": "array",
            "description": "Barcode(s) for the ticket(s) in this listing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BarcodeInformation2"
            }
          }
        }
      },
      "PutRequestedEventRequest": {
        "type": "object",
        "description": "A requested event.",
        "additionalProperties": false,
        "properties": {
          "event": {
            "description": "The event information.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventRequest"
              }
            ]
          },
          "venue": {
            "description": "The venue where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VenueRequest"
              }
            ]
          },
          "country": {
            "description": "The country where the event will take place.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CountryRequest"
              }
            ]
          }
        }
      },
      "SellerEvents": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerEventsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerEventsEmbeddedResources"
              }
            ]
          }
        }
      },
      "SellerEventsLinks": {
        "title": "SellerEventsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SellerEventsEmbeddedResources": {
        "title": "SellerEventsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SellerEvent"
            }
          }
        }
      },
      "SellerEvent": {
        "type": "object",
        "description": "An event on the StubHub marketplace with listings that belong to the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The event identifier.",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the event.",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "description": "The date when the event starts.",
            "format": "date-time",
            "nullable": true
          },
          "end_date": {
            "type": "string",
            "description": "The date when the event ends.",
            "format": "date-time",
            "nullable": true
          },
          "on_sale_date": {
            "type": "string",
            "description": "The date when tickets for the event will go onsale.",
            "format": "date-time",
            "nullable": true
          },
          "date_confirmed": {
            "type": "boolean",
            "description": "True if the event start and end date have been confirmed; Otherwise, false.",
            "nullable": true
          },
          "lms": {
            "type": "boolean",
            "description": "True if the event is a last minute sale event; otherwise, false.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerEventLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SellerEventEmbeddedResources"
              }
            ]
          }
        }
      },
      "SellerEventLinks": {
        "title": "SellerEventLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerevent:createsellerlisting": {
            "description": "Create listing for the currently authenticated user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "sellerevent:sellerlistings": {
            "description": "Event listings that belong to the currently authenticated user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SellerEventEmbeddedResources": {
        "title": "SellerEventEmbeddedResources",
        "type": "object",
        "properties": {
          "external_mappings": {
            "type": "array",
            "description": "The external mappings for this event",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmbeddedExternalMapping"
            }
          },
          "sales_aggregates": {
            "type": "array",
            "description": "The currently authenticated user's aggregated sales data for this event.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SalesAggregate"
            }
          },
          "venue": {
            "description": "Event venue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedVenue"
              }
            ]
          }
        }
      },
      "EmbeddedExternalMapping": {
        "type": "object",
        "description": "An external mapping between a resource on the StubHub platform and the same resource on another platforms. ",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the resource in the external platform",
            "nullable": true
          },
          "platform_name": {
            "type": "string",
            "description": "The name of the external platform. Can be `legacy_stubhub`",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedExternalMappingLinks"
              }
            ]
          }
        }
      },
      "EmbeddedExternalMappingLinks": {
        "title": "EmbeddedExternalMappingLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SalesAggregate": {
        "type": "object",
        "description": "Aggregated sales data for the currently authenticated user.",
        "additionalProperties": false,
        "properties": {
          "number_of_sales": {
            "type": "integer",
            "description": "The total number of sales aggregated in this resource.",
            "format": "int32"
          },
          "proceeds": {
            "description": "The total amount that the seller will receive for the sale.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ]
          },
          "number_of_tickets": {
            "type": "integer",
            "description": "The total number of tickets for the sales aggregated in this resource.",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "A short localised string describing the current status of the aggregated sales.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SalesAggregateLinks"
              }
            ]
          }
        }
      },
      "DistinctAggregates": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "categories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DistinctAggregate"
            }
          },
          "venues": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DistinctAggregate"
            }
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DistinctAggregatesLinks"
              }
            ]
          }
        }
      },
      "DistinctAggregate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DistinctAggregatesLinks": {
        "title": "DistinctAggregatesLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "SalesAggregateLinks": {
        "title": "SalesAggregateLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "salesaggregate:sales": {
            "description": "The sales aggregated in this resource.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "Shipments": {
        "type": "object",
        "description": "The Shipments resource is a collection resource that contains zero or\nmore references to a set of shipments, and links that guide you on ways\nto interact with the shipments. The collection offers a paginated view\nof shipments.",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShipmentsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShipmentsEmbeddedResources"
              }
            ]
          }
        }
      },
      "ShipmentsLinks": {
        "title": "ShipmentsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "shipment:create": {
            "description": "Creates a new shipment for the ticket(s).",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ShipmentsEmbeddedResources": {
        "title": "ShipmentsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Shipment"
            }
          }
        }
      },
      "Shipment": {
        "type": "object",
        "description": "A shipment of one or more tickets by a seller.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The shipment identifier.",
            "format": "int32"
          },
          "tracking_number": {
            "type": "string",
            "description": "The identifier used to track the shipment of the ticket(s).",
            "nullable": true
          },
          "delivery_address": {
            "description": "The address that the seller must ship the tickets to.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShipmentLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShipmentEmbeddedResources"
              }
            ]
          }
        }
      },
      "Address": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "full_name": {
            "type": "string",
            "nullable": true
          },
          "address_1": {
            "type": "string",
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "nullable": true
          },
          "address_3": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ShipmentLinks": {
        "title": "ShipmentLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "shipment:entertrackingnumber": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "shipment:label": {
            "description": "A courier shipping label.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ShipmentEmbeddedResources": {
        "title": "ShipmentEmbeddedResources",
        "type": "object",
        "properties": {
          "delivery_method": {
            "description": "The delivery method for the ticket(s).",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedDeliveryMethod"
              }
            ]
          },
          "pickup_addresses": {
            "type": "array",
            "description": "The addresses where courier pickups could be arranged.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Address2"
            }
          },
          "pickups": {
            "type": "array",
            "description": "The courier pickups that have been scheduled.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Pickup"
            }
          },
          "shipment_state": {
            "description": "The shipment state",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateInformation"
              }
            ]
          }
        }
      },
      "EmbeddedDeliveryMethod": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The delivery method identifier.",
            "format": "int32"
          },
          "type": {
            "description": "The type of delivery method. Can be ETicket, Post or Pickup.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeliveryMethodType"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "The localised name of the delivery method.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The localised description of the delivery method.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmbeddedDeliveryMethodLinks"
              }
            ]
          }
        }
      },
      "DeliveryMethodType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Other",
          "Post",
          "Pickup",
          "ETicket"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "EmbeddedDeliveryMethodLinks": {
        "title": "EmbeddedDeliveryMethodLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "deliverymethod:logo": {
            "description": "An image file containing the logo for the delivery method.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "Address2": {
        "type": "object",
        "description": "An address is a delivery, pickup or billing address associated with the current user.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The address identifier.",
            "format": "int32",
            "nullable": true
          },
          "full_name": {
            "type": "string",
            "description": "The full name of the recipient.",
            "nullable": true
          },
          "default": {
            "type": "boolean",
            "description": "True if the address is the user’s default address; Otherwise, false.",
            "nullable": true
          },
          "address_1": {
            "type": "string",
            "description": "The first line of the address.",
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "description": "The second line of the address.",
            "nullable": true
          },
          "address_3": {
            "type": "string",
            "description": "The third line of the address.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The name of the city where the address is located.",
            "nullable": true
          },
          "state_province": {
            "type": "string",
            "description": "The name of the State or Province where the address is located.",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code for the address.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressEmbeddedResources"
              }
            ]
          }
        }
      },
      "AddressLinks": {
        "title": "AddressLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "address:carrier": {
            "description": "The pickup windows available for Carrier collection.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "address:delete": {
            "description": "Delete the current user’s address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "address:update": {
            "description": "Update the details of the current user’s address.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "AddressEmbeddedResources": {
        "title": "AddressEmbeddedResources",
        "type": "object",
        "properties": {
          "country": {
            "description": "The Country where the address is located.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "Pickup": {
        "type": "object",
        "description": "A scheduled courier pickup for a package.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The pickup identifier.",
            "format": "int32"
          },
          "start_date": {
            "type": "string",
            "description": "The earliest date that the courier will pickup the package.",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "description": "The latest date that the courier will pickup the package.",
            "format": "date-time"
          },
          "address": {
            "description": "The address where the courier will pickup the package.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PickupLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PickupEmbeddedResources"
              }
            ]
          }
        }
      },
      "PickupLinks": {
        "title": "PickupLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "pickup:delete": {
            "description": "Delete/Cancel a courier pickup",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "PickupEmbeddedResources": {
        "title": "PickupEmbeddedResources",
        "type": "object",
        "properties": {
          "carrier": {
            "description": "A carrier (e.g. UPS) that will collect tickets that are to be delivered.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Carrier"
              }
            ]
          }
        }
      },
      "Carrier": {
        "type": "object",
        "description": "A carrier (e.g. UPS) that will collect tickets that are to be delivered.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The carrier identifier.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the carrier.",
            "nullable": true
          },
          "pickup_windows": {
            "type": "array",
            "description": "The windows available for ticket collection.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PickupWindow"
            }
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CarrierLinks"
              }
            ]
          }
        }
      },
      "PickupWindow": {
        "type": "object",
        "description": "Represents a window of time when a courier pickup can be arranged.",
        "additionalProperties": false,
        "properties": {
          "start_date": {
            "type": "string",
            "description": "The date when the window starts.",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "description": "The date when the window ends.",
            "format": "date-time"
          }
        }
      },
      "CarrierLinks": {
        "title": "CarrierLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "carrier:createpickup": {
            "description": "Creates a new pickup for the ticket(s).",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "StateInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PatchShipmentRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tracking_number": {
            "type": "string",
            "description": "The identifier used to track the shipment of the ticket(s).",
            "nullable": true
          }
        }
      },
      "ETicketUploads": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketUploadsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketUploadsEmbeddedResources"
              }
            ]
          }
        }
      },
      "ETicketUploadsLinks": {
        "title": "ETicketUploadsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ETicketUploadsEmbeddedResources": {
        "title": "ETicketUploadsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ETicketUpload"
            }
          }
        }
      },
      "ETicketUpload": {
        "type": "object",
        "description": "Represents an uploaded file that contains one or more E-Tickets.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The identifier of the upload.",
            "format": "int32"
          },
          "file_name": {
            "type": "string",
            "description": "The name of the file that was uploaded.",
            "nullable": true
          },
          "processed_at": {
            "type": "string",
            "description": "The date when all of the E-Tickets in the uploaded file were processed.",
            "format": "date-time"
          },
          "original_number_of_etickets": {
            "type": "integer",
            "description": "The original number of E-Tickets contained in the uploaded file.",
            "format": "int32"
          },
          "status_description": {
            "type": "string",
            "description": "A localised in-depth description of the current status of the upload.",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketUploadLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketUploadEmbeddedResources"
              }
            ]
          }
        }
      },
      "ETicketUploadLinks": {
        "title": "ETicketUploadLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "eticketupload:document": {
            "description": "The original file that was uploaded.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ETicketUploadEmbeddedResources": {
        "title": "ETicketUploadEmbeddedResources",
        "type": "object",
        "properties": {
          "etickets": {
            "type": "array",
            "description": "An array of the individual E-Tickets contained in the uploaded files.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ETicket"
            }
          }
        }
      },
      "ETicket": {
        "type": "object",
        "description": "An electronic ticket that has been uploaded for a listing or a sale.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The identifier of the E-Ticket.",
            "format": "int32"
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketLinks"
              }
            ]
          }
        }
      },
      "ETicketLinks": {
        "title": "ETicketLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "eticket:delete": {
            "description": "Delete this E-Ticket.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "eticket:document": {
            "description": "A PDF file containing the E-Ticket.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "eticket:thumbnail": {
            "description": "An image file containing a thumbnail of the E-Ticket.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ETickets": {
        "type": "object",
        "description": "The ETickets resource is a collection resource that contains zero or\nmore references to a set of E-Tickets, and links that guide you on\nways to interact with the E-Tickets. The collection offers a paginated\nview of E-Tickets.",
        "additionalProperties": false,
        "properties": {
          "total_items": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "_links": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketsLinks"
              }
            ]
          },
          "_embedded": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ETicketsEmbeddedResources"
              }
            ]
          }
        }
      },
      "ETicketsLinks": {
        "title": "ETicketsLinks",
        "type": "object",
        "properties": {
          "self": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "etickets:markback": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "etickets:markedbackdocuments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "first": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "last": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "next": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          },
          "prev": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Link"
              }
            ]
          }
        }
      },
      "ETicketsEmbeddedResources": {
        "title": "ETicketsEmbeddedResources",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ETicket"
            }
          }
        }
      },
      "PostMarkBackETicketsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "responses": {
      "requires_authentication": {
        "description": "Authentication credentials were missing or incorrect.",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      },
      "not_found": {
        "description": "The URI requested is invalid or the resource requested, such as an event, does not exist.",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      },
      "forbidden": {
        "description": "The request is understood, but it has been refused or access is not allowed. An accompanying error message will explain why.",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      },
      "internal_server_error": {
        "description": "Internal server error",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      },
      "validation_failed": {
        "description": "The request data is not valid. errors will contain an object with a localized message that describes the validation error for each property of the data.",
        "content": {
          "application/hal+json": {
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Error"
                }
              ]
            }
          }
        }
      }
    },
    "parameters": {
      "fields": {
        "in": "query",
        "description": "A comma-separated list of the name(s) of the field(s) to be returned."
      },
      "embed": {
        "in": "query",
        "description": "Optional embedded resources are only included in a resource when your application includes the embedded property name(s) as a comma-separated value in the embed parameter."
      }
    },
    "headers": {
      "Content-Language": {
        "schema": {
          "type": "string"
        },
        "example": "en-US"
      },
      "Content-Type": {
        "schema": {
          "type": "string"
        },
        "example": "application/hal+json"
      },
      "VGG-Topic": {
        "description": "Name of the topic that triggered this delivery",
        "schema": {
          "type": "string"
        },
        "example": "Ping"
      },
      "VGG-DeliveryId": {
        "description": "Unique identifier for this delivery",
        "schema": {
          "type": "string"
        },
        "example": "1993433"
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "bearerFormat": "JWT",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://account.stubhub.com/authorize",
            "tokenUrl": "https://account.stubhub.com/oauth2/token",
            "refreshUrl": "https://account.stubhub.com/oauth2/token"
          },
          "clientCredentials": {
            "tokenUrl": "https://account.stubhub.com/oauth2/token"
          },
          "authorizationCode": {
            "authorizationUrl": "https://account.stubhub.com/authorize",
            "tokenUrl": "https://account.stubhub.com/oauth2/token",
            "refreshUrl": "https://account.stubhub.com/oauth2/token"
          }
        }
      }
    }
  },
  "security": [
    {
      "OAuth2": [
        "read:sales",
        "read:sellerlistings",
        "read:user",
        "write:requestedevents",
        "write:sales",
        "write:sellerlistings",
        "write:user"
      ]
    }
  ],
  "tags": [
    {
      "name": "BasicType_Money",
      "description": "Returned for monetary values, such as ticket prices, fees charged and tax amounts.\n<SchemaDefinition schemaRef=\"#/components/schemas/Money\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "Money"
    },
    {
      "name": "BasicType_Seating",
      "description": "Represents the seating information for a ticket(s) in a Venue.\n<SchemaDefinition schemaRef=\"#/components/schemas/Seating\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "Seating"
    },
    {
      "name": "E-Tickets"
    },
    {
      "name": "ListingConstraints"
    },
    {
      "name": "Resource_ETickets",
      "description": "The ETickets resource is a collection resource that contains zero or\nmore references to a set of E-Tickets, and links that guide you on\nways to interact with the E-Tickets. The collection offers a paginated\nview of E-Tickets.\n<SchemaDefinition schemaRef=\"#/components/schemas/ETickets\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "ETickets"
    },
    {
      "name": "Resource_ETicketUpload",
      "description": "Represents an uploaded file that contains one or more E-Tickets.\n<SchemaDefinition schemaRef=\"#/components/schemas/ETicketUpload\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "ETicketUpload"
    },
    {
      "name": "Resource_ETicketUploads",
      "description": "\n<SchemaDefinition schemaRef=\"#/components/schemas/ETicketUploads\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "ETicketUploads"
    },
    {
      "name": "Resource_ListingConstraints",
      "description": "The constraints applied to a listing for a particular event on the StubHub marketplace.\n<SchemaDefinition schemaRef=\"#/components/schemas/ListingConstraints\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "ListingConstraints"
    },
    {
      "name": "Resource_SellerEvent",
      "description": "An event on the StubHub marketplace with listings that belong to the currently authenticated user.\n<SchemaDefinition schemaRef=\"#/components/schemas/SellerEvent\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "SellerEvent"
    },
    {
      "name": "Resource_SellerEvents",
      "description": "\n<SchemaDefinition schemaRef=\"#/components/schemas/SellerEvents\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "SellerEvents"
    },
    {
      "name": "Resource_SellerListing",
      "description": "A set of tickets for sale on the StubHub marketplace that belong to the currently authenticated user.\n<SchemaDefinition schemaRef=\"#/components/schemas/SellerListing\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "SellerListing"
    },
    {
      "name": "Resource_SellerListings",
      "description": "\n<SchemaDefinition schemaRef=\"#/components/schemas/SellerListings\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "SellerListings"
    },
    {
      "name": "Resource_Shipment",
      "description": "A shipment of one or more tickets by a seller.\n<SchemaDefinition schemaRef=\"#/components/schemas/Shipment\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "Shipment"
    },
    {
      "name": "Resource_Shipments",
      "description": "The Shipments resource is a collection resource that contains zero or\nmore references to a set of shipments, and links that guide you on ways\nto interact with the shipments. The collection offers a paginated view\nof shipments.\n<SchemaDefinition schemaRef=\"#/components/schemas/Shipments\" showReadOnly={true} showWriteOnly={true} />",
      "x-displayName": "Shipments"
    },
    {
      "name": "SellerEvents"
    },
    {
      "name": "SellerListings",
      "description": "List tickets, update your listings and search your inventory."
    },
    {
      "name": "SellerListings (External Id)",
      "description": "Manage your inventory using identifiers from an external inventory management system."
    },
    {
      "name": "SellerListings (Preview)",
      "description": "Preview the changes you want to make to your inventory."
    },
    {
      "name": "Shipments"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Endpoints",
      "tags": [
        "SellerListings",
        "SellerListings (External Id)",
        "SellerListings (Preview)",
        "E-Tickets",
        "ListingConstraints",
        "SellerEvents",
        "Shipments"
      ]
    },
    {
      "name": "Basic Types",
      "tags": [
        "BasicType_Money",
        "BasicType_Seating"
      ]
    },
    {
      "name": "Resources",
      "tags": [
        "Resource_ETickets",
        "Resource_ETicketUpload",
        "Resource_ETicketUploads",
        "Resource_ListingConstraints",
        "Resource_SellerEvent",
        "Resource_SellerEvents",
        "Resource_SellerListing",
        "Resource_SellerListings",
        "Resource_Shipment",
        "Resource_Shipments"
      ]
    }
  ]
}